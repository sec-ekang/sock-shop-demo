# Stage 1: Build stage using Go toolset
FROM registry.access.redhat.com/ubi9/go-toolset:latest as builder
# Set environment variable for source code directory
ENV sourcesdir /go/src/github.com/microservices-demo/catalogue/

# Switch to root for package installation and file operations
USER 0
# Clone repository and setup dependencies
RUN mkdir -p /go/src/github.com/microservices-demo/ \
    && cd /go/src/github.com/microservices-demo/ \
    && git clone https://github.com/microservices-demo/catalogue.git \
    && go install github.com/FiloSottile/gvt@latest \
    && find / -iname gvt -type f \
    && cd /go/src/github.com/microservices-demo/catalogue && /opt/app-root/src/go/bin/gvt restore \
    && go mod init github.com/microservices-demo/catalogue \
    && go mod tidy

# Build application with security-conscious flags
RUN cd /go/src/github.com/microservices-demo/catalogue \
    && CGO_ENABLED=0 GOOS=linux go build -mod=readonly -a -installsuffix cgo -o /app github.com/microservices-demo/catalogue/cmd/cataloguesvc

# Drop privileges before moving to next stage
USER 1001

# Stage 2: Runtime environment
FROM registry.access.redhat.com/ubi9/ubi-minimal:latest

# Environment variables for user/group configuration
ENV	SERVICE_USER=myuser \
	SERVICE_UID=10001 \
	SERVICE_GROUP=mygroup \
	SERVICE_GID=10001

# Install runtime dependencies and setup non-root user
RUN microdnf update -y \
    && microdnf install -y nc tzdata openssl ca-certificates fontconfig glibc-langpack-en gzip tar findutils shadow-utils \
    && groupadd -r -g ${SERVICE_GID} ${SERVICE_GROUP} \
    && useradd -r -u ${SERVICE_UID} -g ${SERVICE_GROUP} -m -d /home/${SERVICE_USER} -s /sbin/nologin ${SERVICE_USER}

# Application configuration environment variables
ENV HATEAOS user
ENV USER_DATABASE mongodb
ENV MONGO_HOST user-db

# Set working directory and expose port
WORKDIR /
EXPOSE 8080

# Prepare application directory
RUN mkdir -p /opt/

# Copy artifacts from builder stage
COPY --from=builder /app /opt/app
COPY --from=builder /go/src/github.com/microservices-demo/catalogue/images/ /images/

# Set permissions and ownership
RUN	chmod +x /opt/app \
	&& chmod +rx /images \
	&& chown -R ${SERVICE_USER}:${SERVICE_GROUP} /opt/app /images

# Switch to non-root user for execution
USER ${SERVICE_USER}

# Container entrypoint
CMD ["/opt/app", "-port=8080"]